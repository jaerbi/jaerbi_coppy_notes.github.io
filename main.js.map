{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"input, textarea {\\r\\n  display:block;\\r\\n  width: 100%;\\r\\n  margin-bottom:15px;\\r\\n  padding:10px;\\r\\n  background:none;\\r\\n  border-bottom: 1px solid #414a59 !important;\\r\\n  border:0;\\r\\n  color:#fff;\\r\\n}\\r\\n\\r\\ninput[type='submit'] {\\r\\n  background-color:#ffcc00;\\r\\n  cursor:pointer;\\r\\n  color:#000;\\r\\n  font-weight:bold;\\r\\n  margin-bottom:50px;\\r\\n  padding:20px;\\r\\n}\\r\\n\\r\\nul {\\r\\n  list-style-type:none;\\r\\n  width:100%;\\r\\n  margin:0;padding:0;\\r\\n}\\r\\n\\r\\nul li {\\r\\n  background-color:#414a59;\\r\\n  padding:20px;\\r\\n  margin-bottom:2px;\\r\\n  color:#bec8d9;\\r\\n}\\r\\n\\r\\nul li a {\\r\\n  color:#ffcc00;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n  margin-top:50px;\\r\\n}\\r\\n\"","module.exports = \"\\n<h1>Hello jaerbi</h1>\\n\\n<input type=\\\"text\\\" [(ngModel)]=\\\"title\\\" name=\\\"title\\\" placeholder=\\\"Title...\\\" />\\n<input type=\\\"submit\\\" value=\\\"Add a notes\\\" (click)=\\\"addNotes()\\\" />\\n\\n<ul *ngFor=\\\"let note of notes | async\\\">\\n  <li (click)=\\\"getNotes(note.id)\\\">\\n    <strong>{{note.data.title}} (<a href=\\\"#\\\" (click)=\\\"deleteNote(note.id)\\\">delete</a>)</strong>\\n    <br>\\n    {{note.data.belt}}\\n  </li>\\n</ul>\\n\\n<h1>NOTES</h1>\\n\\n<h3>{{ (note | async)?.title }}</h3>\\n<p>{{ (note | async)?.belt }}</p>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument} from 'angularfire2/firestore';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\ninterface Notes {\n  title: string;\n  belt: string;\n}\n\ninterface NotesId extends Notes {\n  id: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  notesColection: AngularFirestoreCollection<Notes>;\n  notes: any;\n\n  title: string;\n  belt: string;\n\n  notesDoc: AngularFirestoreDocument<Notes>;\n  note: Observable<Notes>;\n\n\n  constructor(private afs: AngularFirestore) {\n  }\n\n  ngOnInit() {\n    this.notesColection = this.afs.collection('notes');\n    this.notes = this.notesColection.snapshotChanges()\n      .pipe(map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data() as Notes;\n          const id = a.payload.doc.id;\n          return {id, data};\n        });\n      }));\n  }\n\n  addNotes() {\n\n    this.belt = '#' + Math.random().toString().slice(2, 8);\n    this.afs.collection('notes').add({'title': this.title, 'belt': this.belt});\n\n  }\n\n  getNotes(noteId) {\n\n    this.notesDoc = this.afs.doc('notes/' + noteId);\n    this.note = this.notesDoc.valueChanges();\n  }\n\n  deleteNote(noteId) {\n\n    this.afs.doc('notes/' + noteId).delete();\n\n  }\n\n\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\n\nimport {AngularFireModule} from 'angularfire2';\nimport {AngularFirestoreModule} from 'angularfire2/firestore';\n\nimport { FormsModule } from \"@angular/forms\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAiouHPKedHOau96DoF9rj_JOGyzuKOHMU\",\n  authDomain: \"jaerbi-7c31f.firebaseapp.com\",\n  databaseURL: \"https://jaerbi-7c31f.firebaseio.com\",\n  projectId: \"jaerbi-7c31f\",\n  storageBucket: \"jaerbi-7c31f.appspot.com\",\n  messagingSenderId: \"440183540485\"\n};\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(firebaseConfig),\n    AngularFirestoreModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}